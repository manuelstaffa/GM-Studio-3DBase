<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

d3d_start();

z = 1280; // z-coordinat
height = 64; // camera collision heighte
sensitivity = 0.4; // mouse sensitivity
acceleration = 0.2; // acceleration
camPitch = 0; // camera pitch
renderDistance = 128000; // render distance

fbVel = 0; // forwards-backwards
rlVel = 0; // right-left
zVel = 0; // z-velocity

slowMaxSpd = 25;
fastMaxSpd = 60;
maxSpd = slowMaxSpd;

slowFov = 80;
fastFov = 110;
fov = slowFov;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// View control

if(window_has_focus() &amp;&amp; !obj_control.gamePaused)
{
    keybinds();
    
    if(!tabKeyHold)
    {
        direction -= sensitivity*(window_mouse_get_x()-window_get_width()*0.5);
        //camPitch += sensitivity*(window_mouse_get_y()-window_get_height()*0.5);
        
        windowW = window_get_width();
        windowH = window_get_height();
        window_mouse_set(windowW/2, windowH/2);
        
        //camPitch = clamp(camPitch, -80, 80);
    }
}

// Take screenshot
if(altKey)
{
    screen_save(working_directory + "\Screenshots\BigRigs2_"+string(current_year)+"-"+string(current_month)+"-"+string(current_day)+"."+string(current_hour)+"-"+string(current_minute)+"-"+string(current_second)+".png");
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

if(!obj_control.gamePaused)
{
    keybinds();
    
    // Keyboard controls
    var fbKeys = (wKeyHold-sKeyHold);
    var rlKeys = (dKeyHold-aKeyHold);
    var zKeys = (spaceKeyHold-controlKeyHold);
    var moving = fbVel != 0 || rlVel != 0;
    
    fbVel += fbKeys*acceleration;
    rlVel += rlKeys*acceleration;
    zVel += zKeys*acceleration;
    
    // Limit speed
    fbVel = clamp(fbVel, -maxSpd, maxSpd);
    rlVel = clamp(rlVel, -maxSpd, maxSpd);
    zVel = clamp(zVel, -maxSpd, maxSpd);
    
    // Decelerate 
    if(fbKeys == 0 &amp;&amp; abs(fbVel) &gt;= 0) 
    {
        fbVel = 0;
    }
        
    if(rlKeys == 0 &amp;&amp; abs(rlVel) &gt;= 0) 
    {
        rlVel = 0;
    }
        
    if(zKeys == 0 &amp;&amp; abs(zVel) &gt;= 0) 
    {
        zVel = 0;
    }
    
    // Translate velocities
    var xVel = lengthdir_x(fbVel, direction)+lengthdir_x(rlVel, direction-90);
    var yVel = lengthdir_y(fbVel, direction)+lengthdir_y(rlVel, direction-90);
    
    // Boost
    if(shiftKeyHold &amp;&amp; fbVel &gt; 0)
    {
        max_spd = fastMaxSpd;
        if(fov &lt; fastFov)
        {
            fov += 1;
        }
    }else{
        maxSpd = slowMaxSpd;
        if(fov &gt; slowFov)
        {
            fov -= 1;
        }
    }
    
    // Collision
    if(!place_meeting_ext(x+xVel, y, z, par_3dObject))
    {
        x += xVel;
    }else{
        while(!place_meeting_ext(x+sign(xVel), y, z, par_3dObject))
        {
            x += sign(xVel);    
        }
        xVel = 0;
    }
    
    if(!place_meeting_ext(x, y+yVel, z, par_3dObject))
    {
        y += yVel;
    }else{
        while(!place_meeting_ext(x, y+sign(yVel), z, par_3dObject))
        {
            y += sign(yVel);    
        }
        yVel = 0;
    }
    
    if(!place_meeting_ext(x, y, z+zVel, par_3dObject))
    {
        z += zVel;
    }else{
        while(!place_meeting_ext(x, y, z+sign(zVel), par_3dObject))
        {
            z += sign(zVel);    
        }
        zVel = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw 3D view

var displayW = display_get_width();
var displayH = display_get_height();

d3d_set_projection_ext(x, y, z, x+lengthdir_x(1, direction), y+lengthdir_y(1, direction), 0, 0, 0, 1, fov, displayW/displayH, 1, renderDistance);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
