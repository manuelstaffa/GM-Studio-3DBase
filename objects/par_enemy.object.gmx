<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_3dObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

z = 0;
zVel = 0;

if(instance_exists(par_pathCollision))
{
    if(point_distance_3d(x, y, z, instance_nearest(x, y, par_pathCollision).x, instance_nearest(x, y, par_pathCollision).y, instance_nearest(x, y, par_pathCollision).z) &lt; 256)
    {
        instance_destroy();
    }
}

xAngle = 0;
yAngle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage

if(instance_exists(obj_attack))
{
    if(point_distance_3d(x+128, y+128, z, instance_nearest(x, y, obj_attack).x, instance_nearest(x, y, obj_attack).y, instance_nearest(x, y, obj_attack).z) &lt; obj_control.hitboxSize)
    {   
        hp--;
        attack = instance_nearest(x+128, y+128, obj_attack);
        instance_destroy(attack, true);
    }
}
    
if(hp &lt;= 0)
{
    instance_create(x, y, obj_explosion);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gravity

var onGround = place_meeting_ext(x, y, z-1, par_3dObject);

if(!onGround) 
{
    zVel -= obj_player.playerGravity;
}

if(!place_meeting_ext(x, y, z+zVel, par_3dObject))
{
    z += zVel;
}else{
    while(!place_meeting_ext(x, y, z+sign(zVel), par_3dObject))
    {
        z += sign(zVel);    
    }
    zVel = 0;
}

// Rotation
if(!place_meeting_ext(x, y, z-50, obj_slope))
{
    xAngle = 0;
    yAngle = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
